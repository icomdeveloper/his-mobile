plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id 'dev.flutter.flutter-gradle-plugin'
    // FlutterFire / Google services (keep if you use Firebase)
    id 'com.google.gms.google-services'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
def hasKeystore = keystorePropertiesFile.exists()
if (hasKeystore) {
    keystorePropertiesFile.withInputStream { stream ->
        keystoreProperties.load(stream)
    }
}

android {
    namespace 'com.mediacreation.his'
    compileSdkVersion 35
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId 'com.mediacreation.his'
        // Use ONE minSdk setting. If you want Flutter’s value, use flutter.minSdkVersion.
        // If you need a fixed one, set it explicitly. Don’t set both.
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutter.versionCode
        versionName flutter.versionName
    }

    signingConfigs {
        if (hasKeystore) {
            release {
                keyAlias keystoreProperties['keyAlias'] ?: ''
                keyPassword keystoreProperties['keyPassword'] ?: ''
                def storeFilePath = keystoreProperties['storeFile']
                if (storeFilePath) {
                    storeFile file(storeFilePath)
                }
                storePassword keystoreProperties['storePassword'] ?: ''
            }
        }
    }

    buildTypes {
        release {
            if (hasKeystore) {
                signingConfig signingConfigs.release
            } else {
                println('⚠️  key.properties not found; release will use default debug signing.')
            }
            // If you plan to shrink:
            // minifyEnabled true
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // debug { /* debug configs if needed */ }
    }
}

flutter {
    source '../..'
}
